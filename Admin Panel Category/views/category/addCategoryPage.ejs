<%- include('../header') %>

<style>
    body {
        background-color: #f8f9fa;
    }

    .page-wrapper {
        padding-top: 30px;
    }

    .page-title {
        color: #343a40;
        font-weight: 600;
    }

    .breadcrumb-item a {
        color: #007bff;
        transition: color 0.2s ease-in-out;
    }
    .breadcrumb-item a:hover {
        color: #0056b3;
    }

    .card {
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    }
    .card:hover {
        transform: translateY(-3px);
        box-shadow: 0 15px 40px rgba(0, 0, 0, 0.12);
    }

    .card-title {
        font-size: 1.6rem;
        font-weight: 700;
        color: #495057;
        margin-bottom: 25px;
    }

    .form-group.row {
        margin-bottom: 25px;
        align-items: center;
    }

    .control-label {
        font-weight: 500;
        color: #555;
    }

    .form-control {
        border-radius: 8px;
        border: 1px solid #ced4da;
        padding: 10px 15px;
        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);
        transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }

    .form-control:focus {
        border-color: #66afe9;
        box-shadow: 0 0 0 0.25rem rgba(0, 123, 255, 0.25);
        outline: none;
    }

    .custom-file-input {
        cursor: pointer;
    }
    .custom-file-label {
        border-radius: 8px;
        transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }
    .custom-file-label::after {
        content: "Choose File";
        background-color: #007bff;
        color: white;
        border-radius: 0 8px 8px 0;
        padding: 10px 15px;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        border-left: 1px solid rgba(0, 0, 0, 0.1);
        transition: background-color 0.2s ease-in-out;
    }
    .custom-file-label:hover::after {
        background-color: #0056b3;
    }
    .custom-file-input:focus ~ .custom-file-label {
        border-color: #66afe9;
        box-shadow: 0 0 0 0.25rem rgba(0, 123, 255, 0.25);
    }
    .custom-file .invalid-feedback {
        margin-top: 5px;
    }

    .btn-primary {
        background-color: #28a745;
        border-color: #28a745;
        border-radius: 8px;
        padding: 10px 25px;
        font-weight: 600;
        transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, transform 0.1s ease-in-out;
    }
    .btn-primary:hover {
        background-color: #218838;
        border-color: #1e7e34;
        transform: translateY(-1px);
    }
    .btn-primary:active {
        transform: translateY(0);
    }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
        border-radius: 8px;
        padding: 10px 25px;
        font-weight: 600;
        transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, transform 0.1s ease-in-out;
    }
    .btn-secondary:hover {
        background-color: #5a6268;
        border-color: #545b62;
        transform: translateY(-1px);
    }
    .btn-secondary:active {
        transform: translateY(0);
    }

    .btn i {
        margin-right: 8px;
    }

    .alert-container {
        margin-bottom: 25px;
    }
    .alert {
        border-radius: 8px;
        font-size: 0.95rem;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.07);
    }
    .alert-success {
        background-color: #d4edda;
        color: #155724;
        border-color: #c3e6cb;
    }
    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
        border-color: #f5c6cb;
    }

    .spinner-border-sm {
        width: 1rem;
        height: 1rem;
        border-width: .15em;
        margin-right: 8px;
    }
</style>

<div class="page-wrapper">
    <div class="page-breadcrumb">
        <div class="row">
            <div class="col-12 d-flex no-block align-items-center">
                <h4 class="page-title">Category Management</h4>
                <div class="ms-auto text-end">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="#">Home</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Add Category</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="row alert-container">
            <div class="col-md-8 offset-md-2" id="alertPlaceholder">
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <form class="form-horizontal" method="post" action="/category/addcategory" enctype="multipart/form-data" id="categoryForm" novalidate>
                        <div class="card-body">
                            <h4 class="card-title text-center mb-4">Create New Category</h4>

                            <div class="form-group row">
                                <label for="c_title" class="col-sm-3 text-end control-label col-form-label">Category Title <span class="text-danger">*</span></label>
                                <div class="col-sm-9">
                                    <input type="text" class="form-control" name="c_title" id="c_title"
                                        placeholder="E.g., Electronics, Books, Fashion..." required aria-describedby="titleHelp" />
                                    <small id="titleHelp" class="form-text text-muted">A concise and descriptive title for your category.</small>
                                    <div class="invalid-feedback">
                                        Please provide a category title.
                                    </div>
                                </div>
                            </div>

                            <div class="form-group row">
                                <label for="c_image" class="col-sm-3 text-end control-label col-form-label">Category Image <span class="text-danger">*</span></label>
                                <div class="col-md-9">
                                    <div class="custom-file">
                                        <input type="file" class="custom-file-input" name="c_image" id="c_image" required aria-describedby="imageHelp" accept="image/*" />
                                        <label class="custom-file-label" for="c_image">Choose file...</label>
                                        <small id="imageHelp" class="form-text text-muted">Upload an image representing this category (e.g., JPEG, PNG).</small>
                                        <div class="invalid-feedback">
                                            Please select an image for the category.
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="border-top">
                            <div class="card-body d-flex justify-content-center">
                                <button type="submit" class="btn btn-primary me-3">
                                    <i class="fas fa-plus-circle"></i> Add Category
                                </button>
                                <button type="reset" class="btn btn-secondary">
                                    <i class="fas fa-redo"></i> Reset Form
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <%- include('../footer') %>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const cImageInput = document.getElementById('c_image');
            if (cImageInput) {
                cImageInput.addEventListener('change', function () {
                    const fileName = this.files[0] ? this.files[0].name : 'Choose file...';
                    const label = this.nextElementSibling;
                    if (label) {
                        label.innerText = fileName;
                    }
                });
            }

            const categoryForm = document.getElementById('categoryForm');
            if (categoryForm) {
                categoryForm.addEventListener('submit', function (event) {
                    if (!categoryForm.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                        showAlert('Please correct the highlighted fields.', 'danger');
                    } else {
                        const submitButton = categoryForm.querySelector('button[type="submit"]');
                        submitButton.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Adding...';
                        submitButton.disabled = true;
                    }
                    categoryForm.classList.add('was-validated');
                }, false);

                categoryForm.addEventListener('reset', function() {
                    categoryForm.classList.remove('was-validated');
                    const cImageLabel = document.querySelector('label[for="c_image"]');
                    if (cImageLabel) {
                        cImageLabel.innerText = 'Choose file...';
                    }
                    const submitButton = categoryForm.querySelector('button[type="submit"]');
                    if (submitButton) {
                        submitButton.innerHTML = '<i class="fas fa-plus-circle"></i> Add Category';
                        submitButton.disabled = false;
                    }
                });
            }

            function showAlert(message, type) {
                const alertPlaceholder = document.getElementById('alertPlaceholder');
                if (alertPlaceholder) {
                    alertPlaceholder.innerHTML = `
                        <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                            ${message}
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    `;
                    setTimeout(() => {
                        const currentAlert = alertPlaceholder.querySelector('.alert');
                        if (currentAlert) {
                            bootstrap.Alert.getInstance(currentAlert)?.close();
                        }
                    }, 5000);
                }
            }
        });
    </script>